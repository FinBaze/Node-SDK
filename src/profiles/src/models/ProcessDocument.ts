/* tslint:disable */
/* eslint-disable */
/**
 * Finbaze profiles API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateChat200Response } from './CreateChat200Response';
import {
    CreateChat200ResponseFromJSON,
    CreateChat200ResponseFromJSONTyped,
    CreateChat200ResponseToJSON,
    CreateChat200ResponseToJSONTyped,
} from './CreateChat200Response';
import type { ProcessDocumentEmail } from './ProcessDocumentEmail';
import {
    ProcessDocumentEmailFromJSON,
    ProcessDocumentEmailFromJSONTyped,
    ProcessDocumentEmailToJSON,
    ProcessDocumentEmailToJSONTyped,
} from './ProcessDocumentEmail';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
    LinksToJSONTyped,
} from './Links';

/**
 * 
 * @export
 * @interface ProcessDocument
 */
export interface ProcessDocument {
    /**
     * 
     * @type {string}
     * @memberof ProcessDocument
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof ProcessDocument
     */
    source?: ProcessDocumentSourceEnum;
    /**
     * 
     * @type {boolean}
     * @memberof ProcessDocument
     */
    processed?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ProcessDocument
     */
    failed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ProcessDocument
     */
    message?: string;
    /**
     * 
     * @type {ProcessDocumentEmail}
     * @memberof ProcessDocument
     */
    email?: ProcessDocumentEmail;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProcessDocument
     */
    attachments?: Array<string>;
    /**
     * 
     * @type {CreateChat200Response}
     * @memberof ProcessDocument
     */
    task?: CreateChat200Response;
    /**
     * Free form key/ value pair
     * @type {{ [key: string]: any; }}
     * @memberof ProcessDocument
     */
    metadata?: { [key: string]: any; };
    /**
     * 
     * @type {Links}
     * @memberof ProcessDocument
     */
    links: Links;
    /**
     * 
     * @type {Date}
     * @memberof ProcessDocument
     */
    readonly updated: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProcessDocument
     */
    readonly created: Date;
}


/**
 * @export
 */
export const ProcessDocumentSourceEnum = {
    Email: 'email',
    Message: 'message',
    Task: 'task'
} as const;
export type ProcessDocumentSourceEnum = typeof ProcessDocumentSourceEnum[keyof typeof ProcessDocumentSourceEnum];


/**
 * Check if a given object implements the ProcessDocument interface.
 */
export function instanceOfProcessDocument(value: object): value is ProcessDocument {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    return true;
}

export function ProcessDocumentFromJSON(json: any): ProcessDocument {
    return ProcessDocumentFromJSONTyped(json, false);
}

export function ProcessDocumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessDocument {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'source': json['source'] == null ? undefined : json['source'],
        'processed': json['processed'] == null ? undefined : json['processed'],
        'failed': json['failed'] == null ? undefined : json['failed'],
        'message': json['message'] == null ? undefined : json['message'],
        'email': json['email'] == null ? undefined : ProcessDocumentEmailFromJSON(json['email']),
        'attachments': json['attachments'] == null ? undefined : json['attachments'],
        'task': json['task'] == null ? undefined : CreateChat200ResponseFromJSON(json['task']),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'links': LinksFromJSON(json['_links']),
        'updated': (new Date(json['updated'])),
        'created': (new Date(json['created'])),
    };
}

export function ProcessDocumentToJSON(json: any): ProcessDocument {
    return ProcessDocumentToJSONTyped(json, false);
}

export function ProcessDocumentToJSONTyped(value?: Omit<ProcessDocument, 'id'|'updated'|'created'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'source': value['source'],
        'processed': value['processed'],
        'failed': value['failed'],
        'message': value['message'],
        'email': ProcessDocumentEmailToJSON(value['email']),
        'attachments': value['attachments'],
        'task': CreateChat200ResponseToJSON(value['task']),
        'metadata': value['metadata'],
        '_links': LinksToJSON(value['links']),
    };
}

