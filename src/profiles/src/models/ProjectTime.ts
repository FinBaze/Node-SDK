/* tslint:disable */
/* eslint-disable */
/**
 * Finbaze profiles API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Employee
 * @export
 * @interface ProjectTime
 */
export interface ProjectTime {
    /**
     * 
     * @type {string}
     * @memberof ProjectTime
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectTime
     */
    name?: string;
    /**
     * Start time of the time that has been recorded
     * @type {Date}
     * @memberof ProjectTime
     */
    start: Date;
    /**
     * End time of the time that has been recorded
     * @type {Date}
     * @memberof ProjectTime
     */
    end?: Date;
    /**
     * Employee ID
     * @type {string}
     * @memberof ProjectTime
     */
    employee: string;
    /**
     * 
     * @type {Date}
     * @memberof ProjectTime
     */
    readonly updated: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProjectTime
     */
    readonly created: Date;
}

/**
 * Check if a given object implements the ProjectTime interface.
 */
export function instanceOfProjectTime(value: object): value is ProjectTime {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('start' in value) || value['start'] === undefined) return false;
    if (!('employee' in value) || value['employee'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    return true;
}

export function ProjectTimeFromJSON(json: any): ProjectTime {
    return ProjectTimeFromJSONTyped(json, false);
}

export function ProjectTimeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectTime {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'start': (new Date(json['start'])),
        'end': json['end'] == null ? undefined : (new Date(json['end'])),
        'employee': json['employee'],
        'updated': (new Date(json['updated'])),
        'created': (new Date(json['created'])),
    };
}

export function ProjectTimeToJSON(json: any): ProjectTime {
    return ProjectTimeToJSONTyped(json, false);
}

export function ProjectTimeToJSONTyped(value?: Omit<ProjectTime, 'id'|'updated'|'created'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'start': ((value['start']).toISOString().substring(0,10)),
        'end': value['end'] == null ? undefined : ((value['end']).toISOString().substring(0,10)),
        'employee': value['employee'],
    };
}

