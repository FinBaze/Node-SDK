/* tslint:disable */
/* eslint-disable */
/**
 * Finbaze profiles API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CreateRelationRequestBank } from './CreateRelationRequestBank';
import {
    CreateRelationRequestBankFromJSON,
    CreateRelationRequestBankFromJSONTyped,
    CreateRelationRequestBankToJSON,
    CreateRelationRequestBankToJSONTyped,
} from './CreateRelationRequestBank';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    AddressToJSONTyped,
} from './Address';
import type { CreateRelationRequestEu } from './CreateRelationRequestEu';
import {
    CreateRelationRequestEuFromJSON,
    CreateRelationRequestEuFromJSONTyped,
    CreateRelationRequestEuToJSON,
    CreateRelationRequestEuToJSONTyped,
} from './CreateRelationRequestEu';

/**
 * 
 * @export
 * @interface CreateRelationRequest
 */
export interface CreateRelationRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateRelationRequest
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateRelationRequest
     */
    legalName?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateRelationRequest
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateRelationRequest
     */
    middleName?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateRelationRequest
     */
    lastName?: string;
    /**
     * 
     * @type {Address}
     * @memberof CreateRelationRequest
     */
    address?: Address;
    /**
     * Registered number of the company
     * @type {string}
     * @memberof CreateRelationRequest
     */
    registrationNumber?: string;
    /**
     * ISO 3166-1 alpha-2 country code
     * @type {string}
     * @memberof CreateRelationRequest
     */
    registrationCountry?: string;
    /**
     * 
     * @type {CreateRelationRequestBank}
     * @memberof CreateRelationRequest
     */
    bank?: CreateRelationRequestBank;
    /**
     * 
     * @type {CreateRelationRequestEu}
     * @memberof CreateRelationRequest
     */
    eu?: CreateRelationRequestEu;
    /**
     * Free form key/ value pair
     * @type {{ [key: string]: any; }}
     * @memberof CreateRelationRequest
     */
    metadata?: { [key: string]: any; };
}

/**
 * Check if a given object implements the CreateRelationRequest interface.
 */
export function instanceOfCreateRelationRequest(value: object): value is CreateRelationRequest {
    return true;
}

export function CreateRelationRequestFromJSON(json: any): CreateRelationRequest {
    return CreateRelationRequestFromJSONTyped(json, false);
}

export function CreateRelationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateRelationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'] == null ? undefined : json['email'],
        'legalName': json['legal_name'] == null ? undefined : json['legal_name'],
        'firstName': json['first_name'] == null ? undefined : json['first_name'],
        'middleName': json['middle_name'] == null ? undefined : json['middle_name'],
        'lastName': json['last_name'] == null ? undefined : json['last_name'],
        'address': json['address'] == null ? undefined : AddressFromJSON(json['address']),
        'registrationNumber': json['registration_number'] == null ? undefined : json['registration_number'],
        'registrationCountry': json['registration_country'] == null ? undefined : json['registration_country'],
        'bank': json['bank'] == null ? undefined : CreateRelationRequestBankFromJSON(json['bank']),
        'eu': json['eu'] == null ? undefined : CreateRelationRequestEuFromJSON(json['eu']),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
    };
}

export function CreateRelationRequestToJSON(json: any): CreateRelationRequest {
    return CreateRelationRequestToJSONTyped(json, false);
}

export function CreateRelationRequestToJSONTyped(value?: CreateRelationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'legal_name': value['legalName'],
        'first_name': value['firstName'],
        'middle_name': value['middleName'],
        'last_name': value['lastName'],
        'address': AddressToJSON(value['address']),
        'registration_number': value['registrationNumber'],
        'registration_country': value['registrationCountry'],
        'bank': CreateRelationRequestBankToJSON(value['bank']),
        'eu': CreateRelationRequestEuToJSON(value['eu']),
        'metadata': value['metadata'],
    };
}

