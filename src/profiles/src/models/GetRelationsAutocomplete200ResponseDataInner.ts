/* tslint:disable */
/* eslint-disable */
/**
 * Finbaze profiles API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    AddressToJSONTyped,
} from './Address';
import type { GetRelationsAutocomplete200ResponseDataInnerEu } from './GetRelationsAutocomplete200ResponseDataInnerEu';
import {
    GetRelationsAutocomplete200ResponseDataInnerEuFromJSON,
    GetRelationsAutocomplete200ResponseDataInnerEuFromJSONTyped,
    GetRelationsAutocomplete200ResponseDataInnerEuToJSON,
    GetRelationsAutocomplete200ResponseDataInnerEuToJSONTyped,
} from './GetRelationsAutocomplete200ResponseDataInnerEu';

/**
 * 
 * @export
 * @interface GetRelationsAutocomplete200ResponseDataInner
 */
export interface GetRelationsAutocomplete200ResponseDataInner {
    /**
     * Display name based on the legal name, first, middle, and last name
     * @type {string}
     * @memberof GetRelationsAutocomplete200ResponseDataInner
     */
    readonly name?: string;
    /**
     * 
     * @type {string}
     * @memberof GetRelationsAutocomplete200ResponseDataInner
     */
    legalName?: string;
    /**
     * Registered number of the company
     * @type {string}
     * @memberof GetRelationsAutocomplete200ResponseDataInner
     */
    registeredNumber?: string;
    /**
     * ISO 3166-1 alpha-2 country code
     * @type {string}
     * @memberof GetRelationsAutocomplete200ResponseDataInner
     */
    registrationCountry?: string;
    /**
     * 
     * @type {GetRelationsAutocomplete200ResponseDataInnerEu}
     * @memberof GetRelationsAutocomplete200ResponseDataInner
     */
    eu?: GetRelationsAutocomplete200ResponseDataInnerEu;
    /**
     * 
     * @type {Address}
     * @memberof GetRelationsAutocomplete200ResponseDataInner
     */
    address?: Address;
}

/**
 * Check if a given object implements the GetRelationsAutocomplete200ResponseDataInner interface.
 */
export function instanceOfGetRelationsAutocomplete200ResponseDataInner(value: object): value is GetRelationsAutocomplete200ResponseDataInner {
    return true;
}

export function GetRelationsAutocomplete200ResponseDataInnerFromJSON(json: any): GetRelationsAutocomplete200ResponseDataInner {
    return GetRelationsAutocomplete200ResponseDataInnerFromJSONTyped(json, false);
}

export function GetRelationsAutocomplete200ResponseDataInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetRelationsAutocomplete200ResponseDataInner {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'legalName': json['legal_name'] == null ? undefined : json['legal_name'],
        'registeredNumber': json['registered_number'] == null ? undefined : json['registered_number'],
        'registrationCountry': json['registration_country'] == null ? undefined : json['registration_country'],
        'eu': json['eu'] == null ? undefined : GetRelationsAutocomplete200ResponseDataInnerEuFromJSON(json['eu']),
        'address': json['address'] == null ? undefined : AddressFromJSON(json['address']),
    };
}

export function GetRelationsAutocomplete200ResponseDataInnerToJSON(json: any): GetRelationsAutocomplete200ResponseDataInner {
    return GetRelationsAutocomplete200ResponseDataInnerToJSONTyped(json, false);
}

export function GetRelationsAutocomplete200ResponseDataInnerToJSONTyped(value?: Omit<GetRelationsAutocomplete200ResponseDataInner, 'name'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'legal_name': value['legalName'],
        'registered_number': value['registeredNumber'],
        'registration_country': value['registrationCountry'],
        'eu': GetRelationsAutocomplete200ResponseDataInnerEuToJSON(value['eu']),
        'address': AddressToJSON(value['address']),
    };
}

