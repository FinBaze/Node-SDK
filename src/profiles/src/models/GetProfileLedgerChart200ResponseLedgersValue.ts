/* tslint:disable */
/* eslint-disable */
/**
 * Finbaze profiles API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetProfileLedgerChart200ResponseLedgersValue
 */
export interface GetProfileLedgerChart200ResponseLedgersValue {
    /**
     * Sort index
     * @type {string}
     * @memberof GetProfileLedgerChart200ResponseLedgersValue
     */
    index: string;
    /**
     * Name of the ledger
     * @type {string}
     * @memberof GetProfileLedgerChart200ResponseLedgersValue
     */
    name: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof GetProfileLedgerChart200ResponseLedgersValue
     */
    trans: { [key: string]: string; };
    /**
     * ID of the ledger category
     * @type {string}
     * @memberof GetProfileLedgerChart200ResponseLedgersValue
     */
    category: string;
    /**
     * The numerical name of the ledger
     * @type {string}
     * @memberof GetProfileLedgerChart200ResponseLedgersValue
     */
    ledger: string;
    /**
     * ID of the correlation, in case of assets, the write off ledger
     * @type {string}
     * @memberof GetProfileLedgerChart200ResponseLedgersValue
     */
    correlation?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof GetProfileLedgerChart200ResponseLedgersValue
     */
    tags?: Array<GetProfileLedgerChart200ResponseLedgersValueTagsEnum>;
    /**
     * Whether the ledger is locked, this does not mean that you cannot use the ledger, it just means you cannot book directly onto the ledger.
     * @type {boolean}
     * @memberof GetProfileLedgerChart200ResponseLedgersValue
     */
    locked?: boolean;
    /**
     * The array to sum of the ledger, this basicly means we will 'copy' all bookings of the ledgers in this array onto this ledger.
     * @type {Array<string>}
     * @memberof GetProfileLedgerChart200ResponseLedgersValue
     */
    sum?: Array<string>;
}


/**
 * @export
 */
export const GetProfileLedgerChart200ResponseLedgersValueTagsEnum = {
    Writeoff: 'writeoff',
    CurrentAccount: 'current_account',
    DebitLoan: 'debit_loan',
    CreditLoan: 'credit_loan',
    AssetValue: 'asset_value',
    BankingFees: 'banking_fees'
} as const;
export type GetProfileLedgerChart200ResponseLedgersValueTagsEnum = typeof GetProfileLedgerChart200ResponseLedgersValueTagsEnum[keyof typeof GetProfileLedgerChart200ResponseLedgersValueTagsEnum];


/**
 * Check if a given object implements the GetProfileLedgerChart200ResponseLedgersValue interface.
 */
export function instanceOfGetProfileLedgerChart200ResponseLedgersValue(value: object): value is GetProfileLedgerChart200ResponseLedgersValue {
    if (!('index' in value) || value['index'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('trans' in value) || value['trans'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('ledger' in value) || value['ledger'] === undefined) return false;
    return true;
}

export function GetProfileLedgerChart200ResponseLedgersValueFromJSON(json: any): GetProfileLedgerChart200ResponseLedgersValue {
    return GetProfileLedgerChart200ResponseLedgersValueFromJSONTyped(json, false);
}

export function GetProfileLedgerChart200ResponseLedgersValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetProfileLedgerChart200ResponseLedgersValue {
    if (json == null) {
        return json;
    }
    return {
        
        'index': json['index'],
        'name': json['name'],
        'trans': json['trans'],
        'category': json['category'],
        'ledger': json['ledger'],
        'correlation': json['correlation'] == null ? undefined : json['correlation'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'locked': json['locked'] == null ? undefined : json['locked'],
        'sum': json['sum'] == null ? undefined : json['sum'],
    };
}

export function GetProfileLedgerChart200ResponseLedgersValueToJSON(json: any): GetProfileLedgerChart200ResponseLedgersValue {
    return GetProfileLedgerChart200ResponseLedgersValueToJSONTyped(json, false);
}

export function GetProfileLedgerChart200ResponseLedgersValueToJSONTyped(value?: GetProfileLedgerChart200ResponseLedgersValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'index': value['index'],
        'name': value['name'],
        'trans': value['trans'],
        'category': value['category'],
        'ledger': value['ledger'],
        'correlation': value['correlation'],
        'tags': value['tags'],
        'locked': value['locked'],
        'sum': value['sum'],
    };
}

