/* tslint:disable */
/* eslint-disable */
/**
 * Finbaze profiles API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    AddressToJSONTyped,
} from './Address';
import type { CreateVehicleTripRequestOdometer } from './CreateVehicleTripRequestOdometer';
import {
    CreateVehicleTripRequestOdometerFromJSON,
    CreateVehicleTripRequestOdometerFromJSONTyped,
    CreateVehicleTripRequestOdometerToJSON,
    CreateVehicleTripRequestOdometerToJSONTyped,
} from './CreateVehicleTripRequestOdometer';

/**
 * 
 * @export
 * @interface CreateVehicleTripRequest
 */
export interface CreateVehicleTripRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateVehicleTripRequest
     */
    type: CreateVehicleTripRequestTypeEnum;
    /**
     * Whether the trip is a return trip or not
     * @type {boolean}
     * @memberof CreateVehicleTripRequest
     */
    _return: boolean;
    /**
     * 
     * @type {Address}
     * @memberof CreateVehicleTripRequest
     */
    from: Address;
    /**
     * 
     * @type {Address}
     * @memberof CreateVehicleTripRequest
     */
    to: Address;
    /**
     * The date and time of the trip
     * @type {Date}
     * @memberof CreateVehicleTripRequest
     */
    date: Date;
    /**
     * 
     * @type {CreateVehicleTripRequestOdometer}
     * @memberof CreateVehicleTripRequest
     */
    odometer?: CreateVehicleTripRequestOdometer;
    /**
     * Free form key/ value pair
     * @type {object}
     * @memberof CreateVehicleTripRequest
     */
    metadata?: object;
}


/**
 * @export
 */
export const CreateVehicleTripRequestTypeEnum = {
    Business: 'business',
    Personal: 'personal'
} as const;
export type CreateVehicleTripRequestTypeEnum = typeof CreateVehicleTripRequestTypeEnum[keyof typeof CreateVehicleTripRequestTypeEnum];


/**
 * Check if a given object implements the CreateVehicleTripRequest interface.
 */
export function instanceOfCreateVehicleTripRequest(value: object): value is CreateVehicleTripRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('_return' in value) || value['_return'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    return true;
}

export function CreateVehicleTripRequestFromJSON(json: any): CreateVehicleTripRequest {
    return CreateVehicleTripRequestFromJSONTyped(json, false);
}

export function CreateVehicleTripRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateVehicleTripRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        '_return': json['return'],
        'from': AddressFromJSON(json['from']),
        'to': AddressFromJSON(json['to']),
        'date': (new Date(json['date'])),
        'odometer': json['odometer'] == null ? undefined : CreateVehicleTripRequestOdometerFromJSON(json['odometer']),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
    };
}

export function CreateVehicleTripRequestToJSON(json: any): CreateVehicleTripRequest {
    return CreateVehicleTripRequestToJSONTyped(json, false);
}

export function CreateVehicleTripRequestToJSONTyped(value?: CreateVehicleTripRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'return': value['_return'],
        'from': AddressToJSON(value['from']),
        'to': AddressToJSON(value['to']),
        'date': ((value['date']).toISOString()),
        'odometer': CreateVehicleTripRequestOdometerToJSON(value['odometer']),
        'metadata': value['metadata'],
    };
}

