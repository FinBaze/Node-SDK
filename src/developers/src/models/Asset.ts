/* tslint:disable */
/* eslint-disable */
/**
 * FinBaze developers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
    LinksToJSONTyped,
} from './Links';

/**
 * 
 * @export
 * @interface Asset
 */
export interface Asset {
    /**
     * 
     * @type {string}
     * @memberof Asset
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof Asset
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof Asset
     */
    name: string;
    /**
     * Lifespan in months
     * @type {number}
     * @memberof Asset
     */
    lifespan: number;
    /**
     * 
     * @type {number}
     * @memberof Asset
     */
    value: number;
    /**
     * 
     * @type {number}
     * @memberof Asset
     */
    residualValue?: number;
    /**
     * 
     * @type {string}
     * @memberof Asset
     */
    ledger: string;
    /**
     * 
     * @type {string}
     * @memberof Asset
     */
    writeoffLedger?: string;
    /**
     * 
     * @type {Date}
     * @memberof Asset
     */
    date: Date;
    /**
     * Free form key/ value pair
     * @type {{ [key: string]: any; }}
     * @memberof Asset
     */
    metadata?: { [key: string]: any; };
    /**
     * 
     * @type {Links}
     * @memberof Asset
     */
    links?: Links;
    /**
     * 
     * @type {Date}
     * @memberof Asset
     */
    readonly updated: Date;
    /**
     * 
     * @type {Date}
     * @memberof Asset
     */
    readonly created: Date;
}

/**
 * Check if a given object implements the Asset interface.
 */
export function instanceOfAsset(value: object): value is Asset {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('lifespan' in value) || value['lifespan'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('ledger' in value) || value['ledger'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    return true;
}

export function AssetFromJSON(json: any): Asset {
    return AssetFromJSONTyped(json, false);
}

export function AssetFromJSONTyped(json: any, ignoreDiscriminator: boolean): Asset {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'code': json['code'] == null ? undefined : json['code'],
        'name': json['name'],
        'lifespan': json['lifespan'],
        'value': json['value'],
        'residualValue': json['residual-value'] == null ? undefined : json['residual-value'],
        'ledger': json['ledger'],
        'writeoffLedger': json['writeoff-ledger'] == null ? undefined : json['writeoff-ledger'],
        'date': (new Date(json['date'])),
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'links': json['_links'] == null ? undefined : LinksFromJSON(json['_links']),
        'updated': (new Date(json['updated'])),
        'created': (new Date(json['created'])),
    };
}

export function AssetToJSON(json: any): Asset {
    return AssetToJSONTyped(json, false);
}

export function AssetToJSONTyped(value?: Omit<Asset, 'id'|'updated'|'created'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'name': value['name'],
        'lifespan': value['lifespan'],
        'value': value['value'],
        'residual-value': value['residualValue'],
        'ledger': value['ledger'],
        'writeoff-ledger': value['writeoffLedger'],
        'date': ((value['date']).toISOString().substring(0,10)),
        'metadata': value['metadata'],
        '_links': LinksToJSON(value['links']),
    };
}

