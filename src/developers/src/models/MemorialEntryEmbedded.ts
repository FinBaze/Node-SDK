/* tslint:disable */
/* eslint-disable */
/**
 * FinBaze developers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MemorialEntryItem } from './MemorialEntryItem';
import {
    MemorialEntryItemFromJSON,
    MemorialEntryItemFromJSONTyped,
    MemorialEntryItemToJSON,
    MemorialEntryItemToJSONTyped,
} from './MemorialEntryItem';

/**
 * 
 * @export
 * @interface MemorialEntryEmbedded
 */
export interface MemorialEntryEmbedded {
    /**
     * 
     * @type {Array<MemorialEntryItem>}
     * @memberof MemorialEntryEmbedded
     */
    items: Array<MemorialEntryItem>;
}

/**
 * Check if a given object implements the MemorialEntryEmbedded interface.
 */
export function instanceOfMemorialEntryEmbedded(value: object): value is MemorialEntryEmbedded {
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function MemorialEntryEmbeddedFromJSON(json: any): MemorialEntryEmbedded {
    return MemorialEntryEmbeddedFromJSONTyped(json, false);
}

export function MemorialEntryEmbeddedFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemorialEntryEmbedded {
    if (json == null) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(MemorialEntryItemFromJSON)),
    };
}

export function MemorialEntryEmbeddedToJSON(json: any): MemorialEntryEmbedded {
    return MemorialEntryEmbeddedToJSONTyped(json, false);
}

export function MemorialEntryEmbeddedToJSONTyped(value?: MemorialEntryEmbedded | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': ((value['items'] as Array<any>).map(MemorialEntryItemToJSON)),
    };
}

