/* tslint:disable */
/* eslint-disable */
/**
 * FinBaze developers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
    LinksToJSONTyped,
} from './Links';
import type { ProcessDocumentEmbedded } from './ProcessDocumentEmbedded';
import {
    ProcessDocumentEmbeddedFromJSON,
    ProcessDocumentEmbeddedFromJSONTyped,
    ProcessDocumentEmbeddedToJSON,
    ProcessDocumentEmbeddedToJSONTyped,
} from './ProcessDocumentEmbedded';
import type { VATFilingType } from './VATFilingType';
import {
    VATFilingTypeFromJSON,
    VATFilingTypeFromJSONTyped,
    VATFilingTypeToJSON,
    VATFilingTypeToJSONTyped,
} from './VATFilingType';

/**
 * 
 * @export
 * @interface VATFiling
 */
export interface VATFiling {
    /**
     * 
     * @type {string}
     * @memberof VATFiling
     */
    readonly id: string;
    /**
     * 
     * @type {VATFilingType}
     * @memberof VATFiling
     */
    type?: VATFilingType;
    /**
     * 
     * @type {Date}
     * @memberof VATFiling
     */
    readonly from: Date;
    /**
     * 
     * @type {Date}
     * @memberof VATFiling
     */
    readonly to: Date;
    /**
     * 
     * @type {boolean}
     * @memberof VATFiling
     */
    send: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof VATFiling
     */
    error: boolean;
    /**
     * 
     * @type {any}
     * @memberof VATFiling
     */
    data: any | null;
    /**
     * Free form key/ value pair
     * @type {{ [key: string]: any; }}
     * @memberof VATFiling
     */
    metadata?: { [key: string]: any; };
    /**
     * 
     * @type {ProcessDocumentEmbedded}
     * @memberof VATFiling
     */
    embedded: ProcessDocumentEmbedded;
    /**
     * 
     * @type {Links}
     * @memberof VATFiling
     */
    links: Links;
    /**
     * 
     * @type {Date}
     * @memberof VATFiling
     */
    readonly updated: Date;
    /**
     * 
     * @type {Date}
     * @memberof VATFiling
     */
    readonly created: Date;
}



/**
 * Check if a given object implements the VATFiling interface.
 */
export function instanceOfVATFiling(value: object): value is VATFiling {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    if (!('send' in value) || value['send'] === undefined) return false;
    if (!('error' in value) || value['error'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('embedded' in value) || value['embedded'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    return true;
}

export function VATFilingFromJSON(json: any): VATFiling {
    return VATFilingFromJSONTyped(json, false);
}

export function VATFilingFromJSONTyped(json: any, ignoreDiscriminator: boolean): VATFiling {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'] == null ? undefined : VATFilingTypeFromJSON(json['type']),
        'from': (new Date(json['from'])),
        'to': (new Date(json['to'])),
        'send': json['send'],
        'error': json['error'],
        'data': json['data'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'embedded': ProcessDocumentEmbeddedFromJSON(json['_embedded']),
        'links': LinksFromJSON(json['_links']),
        'updated': (new Date(json['updated'])),
        'created': (new Date(json['created'])),
    };
}

export function VATFilingToJSON(json: any): VATFiling {
    return VATFilingToJSONTyped(json, false);
}

export function VATFilingToJSONTyped(value?: Omit<VATFiling, 'id'|'from'|'to'|'updated'|'created'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': VATFilingTypeToJSON(value['type']),
        'send': value['send'],
        'error': value['error'],
        'data': value['data'],
        'metadata': value['metadata'],
        '_embedded': ProcessDocumentEmbeddedToJSON(value['embedded']),
        '_links': LinksToJSON(value['links']),
    };
}

