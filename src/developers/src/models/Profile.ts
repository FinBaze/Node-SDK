/* tslint:disable */
/* eslint-disable */
/**
 * FinBaze developers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProfileNl } from './ProfileNl';
import {
    ProfileNlFromJSON,
    ProfileNlFromJSONTyped,
    ProfileNlToJSON,
    ProfileNlToJSONTyped,
} from './ProfileNl';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    AddressToJSONTyped,
} from './Address';
import type { ProfileSettingsBranding } from './ProfileSettingsBranding';
import {
    ProfileSettingsBrandingFromJSON,
    ProfileSettingsBrandingFromJSONTyped,
    ProfileSettingsBrandingToJSON,
    ProfileSettingsBrandingToJSONTyped,
} from './ProfileSettingsBranding';

/**
 * 
 * @export
 * @interface Profile
 */
export interface Profile {
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    legalName: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    name: string;
    /**
     * 
     * @type {ProfileNl}
     * @memberof Profile
     */
    nl?: ProfileNl;
    /**
     * 
     * @type {ProfileSettingsBranding}
     * @memberof Profile
     */
    branding?: ProfileSettingsBranding;
    /**
     * ISO 3166-1 alpha-2 currency code
     * @type {string}
     * @memberof Profile
     */
    currency: string;
    /**
     * 
     * @type {Address}
     * @memberof Profile
     */
    address: Address;
}

/**
 * Check if a given object implements the Profile interface.
 */
export function instanceOfProfile(value: object): value is Profile {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('legalName' in value) || value['legalName'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    return true;
}

export function ProfileFromJSON(json: any): Profile {
    return ProfileFromJSONTyped(json, false);
}

export function ProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): Profile {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'legalName': json['legal_name'],
        'name': json['name'],
        'nl': json['nl'] == null ? undefined : ProfileNlFromJSON(json['nl']),
        'branding': json['branding'] == null ? undefined : ProfileSettingsBrandingFromJSON(json['branding']),
        'currency': json['currency'],
        'address': AddressFromJSON(json['address']),
    };
}

export function ProfileToJSON(json: any): Profile {
    return ProfileToJSONTyped(json, false);
}

export function ProfileToJSONTyped(value?: Omit<Profile, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'legal_name': value['legalName'],
        'name': value['name'],
        'nl': ProfileNlToJSON(value['nl']),
        'branding': ProfileSettingsBrandingToJSON(value['branding']),
        'currency': value['currency'],
        'address': AddressToJSON(value['address']),
    };
}

