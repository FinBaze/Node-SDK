/* tslint:disable */
/* eslint-disable */
/**
 * FinBaze internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RelationEuVies } from './RelationEuVies';
import {
    RelationEuViesFromJSON,
    RelationEuViesFromJSONTyped,
    RelationEuViesToJSON,
    RelationEuViesToJSONTyped,
} from './RelationEuVies';

/**
 * 
 * @export
 * @interface RelationEu
 */
export interface RelationEu {
    /**
     * 
     * @type {RelationEuVies}
     * @memberof RelationEu
     */
    vies?: RelationEuVies;
    /**
     * European Union VAT number
     * @type {string}
     * @memberof RelationEu
     */
    vatNumber: string;
}

/**
 * Check if a given object implements the RelationEu interface.
 */
export function instanceOfRelationEu(value: object): value is RelationEu {
    if (!('vatNumber' in value) || value['vatNumber'] === undefined) return false;
    return true;
}

export function RelationEuFromJSON(json: any): RelationEu {
    return RelationEuFromJSONTyped(json, false);
}

export function RelationEuFromJSONTyped(json: any, ignoreDiscriminator: boolean): RelationEu {
    if (json == null) {
        return json;
    }
    return {
        
        'vies': json['vies'] == null ? undefined : RelationEuViesFromJSON(json['vies']),
        'vatNumber': json['vat-number'],
    };
}

export function RelationEuToJSON(json: any): RelationEu {
    return RelationEuToJSONTyped(json, false);
}

export function RelationEuToJSONTyped(value?: RelationEu | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'vies': RelationEuViesToJSON(value['vies']),
        'vat-number': value['vatNumber'],
    };
}

