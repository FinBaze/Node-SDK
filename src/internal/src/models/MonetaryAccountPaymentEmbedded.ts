/* tslint:disable */
/* eslint-disable */
/**
 * FinBaze internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SalesInvoice } from './SalesInvoice';
import {
    SalesInvoiceFromJSON,
    SalesInvoiceFromJSONTyped,
    SalesInvoiceToJSON,
    SalesInvoiceToJSONTyped,
} from './SalesInvoice';
import type { CreditLoan } from './CreditLoan';
import {
    CreditLoanFromJSON,
    CreditLoanFromJSONTyped,
    CreditLoanToJSON,
    CreditLoanToJSONTyped,
} from './CreditLoan';
import type { CurrentAccount } from './CurrentAccount';
import {
    CurrentAccountFromJSON,
    CurrentAccountFromJSONTyped,
    CurrentAccountToJSON,
    CurrentAccountToJSONTyped,
} from './CurrentAccount';
import type { Relation } from './Relation';
import {
    RelationFromJSON,
    RelationFromJSONTyped,
    RelationToJSON,
    RelationToJSONTyped,
} from './Relation';
import type { MonetaryAccount } from './MonetaryAccount';
import {
    MonetaryAccountFromJSON,
    MonetaryAccountFromJSONTyped,
    MonetaryAccountToJSON,
    MonetaryAccountToJSONTyped,
} from './MonetaryAccount';
import type { DebitLoan } from './DebitLoan';
import {
    DebitLoanFromJSON,
    DebitLoanFromJSONTyped,
    DebitLoanToJSON,
    DebitLoanToJSONTyped,
} from './DebitLoan';
import type { PurchaseInvoice } from './PurchaseInvoice';
import {
    PurchaseInvoiceFromJSON,
    PurchaseInvoiceFromJSONTyped,
    PurchaseInvoiceToJSON,
    PurchaseInvoiceToJSONTyped,
} from './PurchaseInvoice';
import type { MonetaryAccountPaymentEmbeddedLedger } from './MonetaryAccountPaymentEmbeddedLedger';
import {
    MonetaryAccountPaymentEmbeddedLedgerFromJSON,
    MonetaryAccountPaymentEmbeddedLedgerFromJSONTyped,
    MonetaryAccountPaymentEmbeddedLedgerToJSON,
    MonetaryAccountPaymentEmbeddedLedgerToJSONTyped,
} from './MonetaryAccountPaymentEmbeddedLedger';
import type { Profile } from './Profile';
import {
    ProfileFromJSON,
    ProfileFromJSONTyped,
    ProfileToJSON,
    ProfileToJSONTyped,
} from './Profile';

/**
 * 
 * @export
 * @interface MonetaryAccountPaymentEmbedded
 */
export interface MonetaryAccountPaymentEmbedded {
    /**
     * 
     * @type {Profile}
     * @memberof MonetaryAccountPaymentEmbedded
     */
    profile: Profile;
    /**
     * 
     * @type {MonetaryAccount}
     * @memberof MonetaryAccountPaymentEmbedded
     */
    monetaryAccount: MonetaryAccount;
    /**
     * 
     * @type {MonetaryAccountPaymentEmbeddedLedger}
     * @memberof MonetaryAccountPaymentEmbedded
     */
    ledger?: MonetaryAccountPaymentEmbeddedLedger;
    /**
     * 
     * @type {DebitLoan}
     * @memberof MonetaryAccountPaymentEmbedded
     */
    debitLoan?: DebitLoan;
    /**
     * 
     * @type {CreditLoan}
     * @memberof MonetaryAccountPaymentEmbedded
     */
    creditLoan?: CreditLoan;
    /**
     * 
     * @type {SalesInvoice}
     * @memberof MonetaryAccountPaymentEmbedded
     */
    salesInvoice?: SalesInvoice;
    /**
     * 
     * @type {PurchaseInvoice}
     * @memberof MonetaryAccountPaymentEmbedded
     */
    purchaseInvoice?: PurchaseInvoice;
    /**
     * 
     * @type {Relation}
     * @memberof MonetaryAccountPaymentEmbedded
     */
    relation?: Relation;
    /**
     * 
     * @type {CurrentAccount}
     * @memberof MonetaryAccountPaymentEmbedded
     */
    currentAccount?: CurrentAccount;
}

/**
 * Check if a given object implements the MonetaryAccountPaymentEmbedded interface.
 */
export function instanceOfMonetaryAccountPaymentEmbedded(value: object): value is MonetaryAccountPaymentEmbedded {
    if (!('profile' in value) || value['profile'] === undefined) return false;
    if (!('monetaryAccount' in value) || value['monetaryAccount'] === undefined) return false;
    return true;
}

export function MonetaryAccountPaymentEmbeddedFromJSON(json: any): MonetaryAccountPaymentEmbedded {
    return MonetaryAccountPaymentEmbeddedFromJSONTyped(json, false);
}

export function MonetaryAccountPaymentEmbeddedFromJSONTyped(json: any, ignoreDiscriminator: boolean): MonetaryAccountPaymentEmbedded {
    if (json == null) {
        return json;
    }
    return {
        
        'profile': ProfileFromJSON(json['profile']),
        'monetaryAccount': MonetaryAccountFromJSON(json['monetary-account']),
        'ledger': json['ledger'] == null ? undefined : MonetaryAccountPaymentEmbeddedLedgerFromJSON(json['ledger']),
        'debitLoan': json['debit-loan'] == null ? undefined : DebitLoanFromJSON(json['debit-loan']),
        'creditLoan': json['credit-loan'] == null ? undefined : CreditLoanFromJSON(json['credit-loan']),
        'salesInvoice': json['sales-invoice'] == null ? undefined : SalesInvoiceFromJSON(json['sales-invoice']),
        'purchaseInvoice': json['purchase-invoice'] == null ? undefined : PurchaseInvoiceFromJSON(json['purchase-invoice']),
        'relation': json['relation'] == null ? undefined : RelationFromJSON(json['relation']),
        'currentAccount': json['current-account'] == null ? undefined : CurrentAccountFromJSON(json['current-account']),
    };
}

export function MonetaryAccountPaymentEmbeddedToJSON(json: any): MonetaryAccountPaymentEmbedded {
    return MonetaryAccountPaymentEmbeddedToJSONTyped(json, false);
}

export function MonetaryAccountPaymentEmbeddedToJSONTyped(value?: MonetaryAccountPaymentEmbedded | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'profile': ProfileToJSON(value['profile']),
        'monetary-account': MonetaryAccountToJSON(value['monetaryAccount']),
        'ledger': MonetaryAccountPaymentEmbeddedLedgerToJSON(value['ledger']),
        'debit-loan': DebitLoanToJSON(value['debitLoan']),
        'credit-loan': CreditLoanToJSON(value['creditLoan']),
        'sales-invoice': SalesInvoiceToJSON(value['salesInvoice']),
        'purchase-invoice': PurchaseInvoiceToJSON(value['purchaseInvoice']),
        'relation': RelationToJSON(value['relation']),
        'current-account': CurrentAccountToJSON(value['currentAccount']),
    };
}

