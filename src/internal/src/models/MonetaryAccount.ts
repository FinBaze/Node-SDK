/* tslint:disable */
/* eslint-disable */
/**
 * FinBaze internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MonetaryAccountType } from './MonetaryAccountType';
import {
    MonetaryAccountTypeFromJSON,
    MonetaryAccountTypeFromJSONTyped,
    MonetaryAccountTypeToJSON,
    MonetaryAccountTypeToJSONTyped,
} from './MonetaryAccountType';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
    LinksToJSONTyped,
} from './Links';
import type { MonetaryAccountFeatures } from './MonetaryAccountFeatures';
import {
    MonetaryAccountFeaturesFromJSON,
    MonetaryAccountFeaturesFromJSONTyped,
    MonetaryAccountFeaturesToJSON,
    MonetaryAccountFeaturesToJSONTyped,
} from './MonetaryAccountFeatures';

/**
 * 
 * @export
 * @interface MonetaryAccount
 */
export interface MonetaryAccount {
    /**
     * 
     * @type {string}
     * @memberof MonetaryAccount
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof MonetaryAccount
     */
    name: string;
    /**
     * 
     * @type {MonetaryAccountFeatures}
     * @memberof MonetaryAccount
     */
    features: MonetaryAccountFeatures;
    /**
     * Wheter or not to display this monetary account as active
     * @type {boolean}
     * @memberof MonetaryAccount
     */
    active?: boolean;
    /**
     * The initial balance of the monetary account, we will book this balance in addition to the balance shown.
     * @type {number}
     * @memberof MonetaryAccount
     */
    initialBalance?: number;
    /**
     * The start date of the monetary account, all transaction before this date will be ignored.
     * @type {Date}
     * @memberof MonetaryAccount
     */
    start?: Date;
    /**
     * The End date of the monetary account, all transaction after this date will be ignored.
     * @type {Date}
     * @memberof MonetaryAccount
     */
    end?: Date;
    /**
     * 
     * @type {number}
     * @memberof MonetaryAccount
     */
    balance?: number;
    /**
     * 
     * @type {MonetaryAccountType}
     * @memberof MonetaryAccount
     */
    type: MonetaryAccountType;
    /**
     * ISO 3166-1 alpha-2 currency code
     * @type {string}
     * @memberof MonetaryAccount
     */
    currency: string;
    /**
     * Free form key/ value pair
     * @type {{ [key: string]: any; }}
     * @memberof MonetaryAccount
     */
    metadata?: { [key: string]: any; };
    /**
     * 
     * @type {Links}
     * @memberof MonetaryAccount
     */
    links: Links;
    /**
     * 
     * @type {Date}
     * @memberof MonetaryAccount
     */
    readonly updated: Date;
    /**
     * 
     * @type {Date}
     * @memberof MonetaryAccount
     */
    readonly created: Date;
}



/**
 * Check if a given object implements the MonetaryAccount interface.
 */
export function instanceOfMonetaryAccount(value: object): value is MonetaryAccount {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('features' in value) || value['features'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('links' in value) || value['links'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    return true;
}

export function MonetaryAccountFromJSON(json: any): MonetaryAccount {
    return MonetaryAccountFromJSONTyped(json, false);
}

export function MonetaryAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): MonetaryAccount {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'features': MonetaryAccountFeaturesFromJSON(json['features']),
        'active': json['active'] == null ? undefined : json['active'],
        'initialBalance': json['initial-balance'] == null ? undefined : json['initial-balance'],
        'start': json['start'] == null ? undefined : (new Date(json['start'])),
        'end': json['end'] == null ? undefined : (new Date(json['end'])),
        'balance': json['balance'] == null ? undefined : json['balance'],
        'type': MonetaryAccountTypeFromJSON(json['type']),
        'currency': json['currency'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'links': LinksFromJSON(json['_links']),
        'updated': (new Date(json['updated'])),
        'created': (new Date(json['created'])),
    };
}

export function MonetaryAccountToJSON(json: any): MonetaryAccount {
    return MonetaryAccountToJSONTyped(json, false);
}

export function MonetaryAccountToJSONTyped(value?: Omit<MonetaryAccount, 'id'|'updated'|'created'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'features': MonetaryAccountFeaturesToJSON(value['features']),
        'active': value['active'],
        'initial-balance': value['initialBalance'],
        'start': value['start'] == null ? undefined : ((value['start']).toISOString().substring(0,10)),
        'end': value['end'] == null ? undefined : ((value['end']).toISOString().substring(0,10)),
        'balance': value['balance'],
        'type': MonetaryAccountTypeToJSON(value['type']),
        'currency': value['currency'],
        'metadata': value['metadata'],
        '_links': LinksToJSON(value['links']),
    };
}

