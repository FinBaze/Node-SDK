/* tslint:disable */
/* eslint-disable */
/**
 * FinBaze internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Address } from './Address';
import {
    AddressFromJSON,
    AddressFromJSONTyped,
    AddressToJSON,
    AddressToJSONTyped,
} from './Address';
import type { GetJurisdictions200ResponseValueEu } from './GetJurisdictions200ResponseValueEu';
import {
    GetJurisdictions200ResponseValueEuFromJSON,
    GetJurisdictions200ResponseValueEuFromJSONTyped,
    GetJurisdictions200ResponseValueEuToJSON,
    GetJurisdictions200ResponseValueEuToJSONTyped,
} from './GetJurisdictions200ResponseValueEu';

/**
 * 
 * @export
 * @interface GetJurisdictions200ResponseValue
 */
export interface GetJurisdictions200ResponseValue {
    /**
     * 
     * @type {string}
     * @memberof GetJurisdictions200ResponseValue
     */
    legalName: string;
    /**
     * 
     * @type {string}
     * @memberof GetJurisdictions200ResponseValue
     */
    registrationNumber: string;
    /**
     * 
     * @type {string}
     * @memberof GetJurisdictions200ResponseValue
     */
    registrationCountry: string;
    /**
     * 
     * @type {Address}
     * @memberof GetJurisdictions200ResponseValue
     */
    address: Address;
    /**
     * 
     * @type {GetJurisdictions200ResponseValueEu}
     * @memberof GetJurisdictions200ResponseValue
     */
    eu?: GetJurisdictions200ResponseValueEu;
    /**
     * 
     * @type {GetJurisdictions200ResponseValueEu}
     * @memberof GetJurisdictions200ResponseValue
     */
    gb?: GetJurisdictions200ResponseValueEu;
}

/**
 * Check if a given object implements the GetJurisdictions200ResponseValue interface.
 */
export function instanceOfGetJurisdictions200ResponseValue(value: object): value is GetJurisdictions200ResponseValue {
    if (!('legalName' in value) || value['legalName'] === undefined) return false;
    if (!('registrationNumber' in value) || value['registrationNumber'] === undefined) return false;
    if (!('registrationCountry' in value) || value['registrationCountry'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    return true;
}

export function GetJurisdictions200ResponseValueFromJSON(json: any): GetJurisdictions200ResponseValue {
    return GetJurisdictions200ResponseValueFromJSONTyped(json, false);
}

export function GetJurisdictions200ResponseValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetJurisdictions200ResponseValue {
    if (json == null) {
        return json;
    }
    return {
        
        'legalName': json['legal-name'],
        'registrationNumber': json['registration-number'],
        'registrationCountry': json['registration-country'],
        'address': AddressFromJSON(json['address']),
        'eu': json['eu'] == null ? undefined : GetJurisdictions200ResponseValueEuFromJSON(json['eu']),
        'gb': json['gb'] == null ? undefined : GetJurisdictions200ResponseValueEuFromJSON(json['gb']),
    };
}

export function GetJurisdictions200ResponseValueToJSON(json: any): GetJurisdictions200ResponseValue {
    return GetJurisdictions200ResponseValueToJSONTyped(json, false);
}

export function GetJurisdictions200ResponseValueToJSONTyped(value?: GetJurisdictions200ResponseValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'legal-name': value['legalName'],
        'registration-number': value['registrationNumber'],
        'registration-country': value['registrationCountry'],
        'address': AddressToJSON(value['address']),
        'eu': GetJurisdictions200ResponseValueEuToJSON(value['eu']),
        'gb': GetJurisdictions200ResponseValueEuToJSON(value['gb']),
    };
}

