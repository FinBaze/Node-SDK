/* tslint:disable */
/* eslint-disable */
/**
 * FinBaze internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NLVATFilingData } from './NLVATFilingData';
import {
    NLVATFilingDataFromJSON,
    NLVATFilingDataFromJSONTyped,
    NLVATFilingDataToJSON,
    NLVATFilingDataToJSONTyped,
} from './NLVATFilingData';

/**
 * 
 * @export
 * @interface NLVATFiling
 */
export interface NLVATFiling {
    /**
     * 
     * @type {string}
     * @memberof NLVATFiling
     */
    readonly id: string;
    /**
     * 
     * @type {Date}
     * @memberof NLVATFiling
     */
    from: Date;
    /**
     * 
     * @type {Date}
     * @memberof NLVATFiling
     */
    to: Date;
    /**
     * 
     * @type {NLVATFilingData}
     * @memberof NLVATFiling
     */
    data: NLVATFilingData;
    /**
     * 
     * @type {Date}
     * @memberof NLVATFiling
     */
    readonly updated: Date;
    /**
     * 
     * @type {Date}
     * @memberof NLVATFiling
     */
    readonly created: Date;
}

/**
 * Check if a given object implements the NLVATFiling interface.
 */
export function instanceOfNLVATFiling(value: object): value is NLVATFiling {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('to' in value) || value['to'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    return true;
}

export function NLVATFilingFromJSON(json: any): NLVATFiling {
    return NLVATFilingFromJSONTyped(json, false);
}

export function NLVATFilingFromJSONTyped(json: any, ignoreDiscriminator: boolean): NLVATFiling {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'from': (new Date(json['from'])),
        'to': (new Date(json['to'])),
        'data': NLVATFilingDataFromJSON(json['data']),
        'updated': (new Date(json['updated'])),
        'created': (new Date(json['created'])),
    };
}

export function NLVATFilingToJSON(json: any): NLVATFiling {
    return NLVATFilingToJSONTyped(json, false);
}

export function NLVATFilingToJSONTyped(value?: Omit<NLVATFiling, 'id'|'updated'|'created'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'from': ((value['from']).toISOString().substring(0,10)),
        'to': ((value['to']).toISOString().substring(0,10)),
        'data': NLVATFilingDataToJSON(value['data']),
    };
}

