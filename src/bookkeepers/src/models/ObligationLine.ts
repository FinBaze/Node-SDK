/* tslint:disable */
/* eslint-disable */
/**
 * FinBaze bookkeepers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ObligationLine
 */
export interface ObligationLine {
    /**
     * 
     * @type {string}
     * @memberof ObligationLine
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof ObligationLine
     */
    product?: string;
    /**
     * ID of the project to use to apply the revenue to
     * @type {string}
     * @memberof ObligationLine
     */
    project?: string;
    /**
     * 
     * @type {string}
     * @memberof ObligationLine
     */
    revenueCategory?: string;
    /**
     * 
     * @type {string}
     * @memberof ObligationLine
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ObligationLine
     */
    taxCode: string;
    /**
     * 
     * @type {number}
     * @memberof ObligationLine
     */
    tax: number;
    /**
     * 
     * @type {number}
     * @memberof ObligationLine
     */
    price: number;
    /**
     * 
     * @type {number}
     * @memberof ObligationLine
     */
    quantity: number;
    /**
     * 
     * @type {number}
     * @memberof ObligationLine
     */
    discount?: number;
    /**
     * Free form key/ value pair
     * @type {{ [key: string]: any; }}
     * @memberof ObligationLine
     */
    metadata?: { [key: string]: any; };
    /**
     * 
     * @type {Date}
     * @memberof ObligationLine
     */
    readonly updated: Date;
    /**
     * 
     * @type {Date}
     * @memberof ObligationLine
     */
    readonly created: Date;
}

/**
 * Check if a given object implements the ObligationLine interface.
 */
export function instanceOfObligationLine(value: object): value is ObligationLine {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('taxCode' in value) || value['taxCode'] === undefined) return false;
    if (!('tax' in value) || value['tax'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('quantity' in value) || value['quantity'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    return true;
}

export function ObligationLineFromJSON(json: any): ObligationLine {
    return ObligationLineFromJSONTyped(json, false);
}

export function ObligationLineFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObligationLine {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'product': json['product'] == null ? undefined : json['product'],
        'project': json['project'] == null ? undefined : json['project'],
        'revenueCategory': json['revenue-category'] == null ? undefined : json['revenue-category'],
        'name': json['name'],
        'taxCode': json['tax-code'],
        'tax': json['tax'],
        'price': json['price'],
        'quantity': json['quantity'],
        'discount': json['discount'] == null ? undefined : json['discount'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'updated': (new Date(json['updated'])),
        'created': (new Date(json['created'])),
    };
}

export function ObligationLineToJSON(json: any): ObligationLine {
    return ObligationLineToJSONTyped(json, false);
}

export function ObligationLineToJSONTyped(value?: Omit<ObligationLine, 'id'|'updated'|'created'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'product': value['product'],
        'project': value['project'],
        'revenue-category': value['revenueCategory'],
        'name': value['name'],
        'tax-code': value['taxCode'],
        'tax': value['tax'],
        'price': value['price'],
        'quantity': value['quantity'],
        'discount': value['discount'],
        'metadata': value['metadata'],
    };
}

