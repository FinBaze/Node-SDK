/* tslint:disable */
/* eslint-disable */
/**
 * FinBaze bookkeepers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
    LinksToJSONTyped,
} from './Links';

/**
 * An account that represents a user
 * @export
 * @interface Account
 */
export interface Account {
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    middleName?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    language?: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    phone?: string;
    /**
     * 
     * @type {Links}
     * @memberof Account
     */
    links?: Links;
    /**
     * 
     * @type {Date}
     * @memberof Account
     */
    readonly updated: Date;
    /**
     * 
     * @type {Date}
     * @memberof Account
     */
    readonly created: Date;
}

/**
 * Check if a given object implements the Account interface.
 */
export function instanceOfAccount(value: object): value is Account {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    return true;
}

export function AccountFromJSON(json: any): Account {
    return AccountFromJSONTyped(json, false);
}

export function AccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): Account {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'firstName': json['first-name'],
        'middleName': json['middle-name'] == null ? undefined : json['middle-name'],
        'lastName': json['last-name'],
        'language': json['language'] == null ? undefined : json['language'],
        'email': json['email'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'links': json['_links'] == null ? undefined : LinksFromJSON(json['_links']),
        'updated': (new Date(json['updated'])),
        'created': (new Date(json['created'])),
    };
}

export function AccountToJSON(json: any): Account {
    return AccountToJSONTyped(json, false);
}

export function AccountToJSONTyped(value?: Omit<Account, 'id'|'updated'|'created'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'first-name': value['firstName'],
        'middle-name': value['middleName'],
        'last-name': value['lastName'],
        'language': value['language'],
        'email': value['email'],
        'phone': value['phone'],
        '_links': LinksToJSON(value['links']),
    };
}

