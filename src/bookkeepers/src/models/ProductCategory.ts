/* tslint:disable */
/* eslint-disable */
/**
 * FinBaze bookkeepers API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductCategory
 */
export interface ProductCategory {
    /**
     * Unique identifier for the product category
     * @type {string}
     * @memberof ProductCategory
     */
    id: string;
    /**
     * Name of the product category
     * @type {string}
     * @memberof ProductCategory
     */
    name: string;
    /**
     * Free form key/ value pair
     * @type {object}
     * @memberof ProductCategory
     */
    metadata?: object;
    /**
     * 
     * @type {Date}
     * @memberof ProductCategory
     */
    readonly updated: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProductCategory
     */
    readonly created: Date;
}

/**
 * Check if a given object implements the ProductCategory interface.
 */
export function instanceOfProductCategory(value: object): value is ProductCategory {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    return true;
}

export function ProductCategoryFromJSON(json: any): ProductCategory {
    return ProductCategoryFromJSONTyped(json, false);
}

export function ProductCategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductCategory {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'updated': (new Date(json['updated'])),
        'created': (new Date(json['created'])),
    };
}

export function ProductCategoryToJSON(json: any): ProductCategory {
    return ProductCategoryToJSONTyped(json, false);
}

export function ProductCategoryToJSONTyped(value?: Omit<ProductCategory, 'updated'|'created'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'metadata': value['metadata'],
    };
}

