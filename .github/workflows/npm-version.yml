name: Version Increment
permissions:
  contents: write
on:
  push:
    branches:
      - main
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run build
      - run: npm test

  increment:
    needs: build
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, '[RELEASE]')"
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: git config --global user.name 'FinBaze Bot'
      - run: git config --global user.email 'info@finbaze.com'
      - run: npm version patch -m "[RELEASE] %s - version bump"
      - run: git push

  publish-github:
    needs: build
    if: "!startsWith(github.event.head_commit.message, '[RELEASE]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com'
          scope: '@finbaze'
      - run: npm install
      - run: npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}


  publish-npm:
    needs: build
    if: "!startsWith(github.event.head_commit.message, '[RELEASE]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: npm install
      - run: npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, '[RELEASE]')"
    steps:
      - uses: actions/checkout@v4
      - uses: martinbeentjes/npm-get-version-action@v1.3.1
        id: package-version
      - uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version}}
          release_name: Release ${{ steps.package-version.outputs.current-version}}
          draft: false
          prerelease: false